var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.814,1,1.552]],["body/modules/AppModule.html",[0,2.461,1,2.811,2,1.433,3,1.227,4,1.71,5,1.71,6,1.227,7,3.224,8,1.71,9,1.71,10,1.71,11,1.41,12,0.051,13,1.933,14,1.852,15,2.49,16,1.71,17,1.71,18,0.387,19,0.387,20,0.323,21,2.13,22,1.786,23,2.106,24,2.106,25,1.28,26,0.807,27,2.13,28,2.13,29,2.13,30,2.13,31,2.13,32,2.13,33,3.101,34,3.101,35,2.13,36,3.101,37,3.101,38,2.087,39,3.101,40,3.101,41,1.433,42,2.13,43,2.13,44,2.13,45,2.13,46,2.13,47,0.387,48,0.323,49,0.03,50,0.03]],["title/injectables/PrismaServices.html",[11,0.89,51,1.021]],["body/injectables/PrismaServices.html",[11,1.288,12,0.051,18,0.538,19,0.538,20,0.45,25,1.121,26,1.122,47,0.538,48,0.45,49,0.038,50,0.038,51,1.477,52,1.707,53,2.379,54,3.899,55,2.932,56,0.538,57,1.477,58,1.891,59,4.939,60,0.852,61,2.964,62,1.122,63,2.964,64,0.979,65,2.379,66,1.286,67,2.964]],["title/classes/PrismaUserRepositorie.html",[48,0.409,68,1.814]],["body/classes/PrismaUserRepositorie.html",[11,1.242,12,0.051,18,0.406,19,0.406,20,0.34,25,1.081,47,0.406,48,0.34,49,0.031,50,0.031,56,0.406,57,1.217,58,1.966,60,1.081,62,1.217,64,0.739,65,2.58,66,1.395,68,2.163,69,1.289,70,1.797,71,2.367,72,2.58,73,2.58,74,1.506,75,1.506,76,2.238,77,1.632,78,1.424,79,0.936,80,1.632,81,1.851,82,2.58,83,2.531,84,2.238,85,1.289,86,2.163,87,2.58,88,1.242,89,2.238,90,1.506,91,0.848,92,1.506,93,1.116,94,1.506,95,1.602,96,2.238,97,1.797,98,1.797]],["title/interfaces/PutUsersInTravelResponse.html",[99,1.021,100,1.552]],["body/interfaces/PutUsersInTravelResponse.html",[12,0.051,18,0.576,19,0.576,20,0.482,25,0.913,47,0.576,49,0.04,50,0.04,56,0.576,64,1.05,79,1.015,91,1.706,99,1.203,100,2.349,101,1.83,102,2.551,103,2.033,104,4.506,105,4.506,106,3.032,107,3.177,108,3.177]],["title/controllers/TravelController.html",[24,1.552,109,1.343]],["body/controllers/TravelController.html",[12,0.052,13,0.669,18,0.28,19,0.28,20,0.234,22,0.888,24,1.397,25,1.064,26,0.584,47,0.28,48,0.234,49,0.024,50,0.024,56,0.28,57,0.919,58,2.019,60,0.978,62,1.289,64,0.509,66,0.669,77,1.477,78,1.289,79,0.978,80,1.477,86,1.037,88,1.124,91,0.919,93,0.768,95,1.959,106,1.633,109,0.768,110,1.237,111,1.237,112,1.633,113,2.426,114,2.426,115,2.426,116,1.948,117,1.541,118,2.426,119,2.732,120,1.541,121,1.541,122,1.541,123,1.541,124,1.541,125,1.541,126,1.633,127,1.728,128,1.541,129,1.541,130,1.541,131,1.541,132,1.728,133,1.237,134,1.541,135,1.948,136,1.237,137,1.237,138,1.541,139,1.541,140,1.541,141,1.541,142,1.237,143,1.037,144,1.541,145,0.888,146,1.541,147,1.237,148,1.541,149,1.541,150,1.397,151,1.541,152,1.948,153,1.237,154,1.541,155,1.541,156,1.541,157,1.541,158,1.541,159,1.237,160,1.541,161,1.541,162,1.237,163,1.541,164,1.541,165,1.541,166,2.426,167,1.541,168,1.541,169,1.541,170,1.541,171,1.541,172,1.541,173,1.541,174,1.541,175,1.541,176,1.541,177,1.541,178,1.541,179,1.237,180,1.541,181,1.541,182,1.541]],["title/injectables/TravelService.html",[13,1.169,51,1.021]],["body/injectables/TravelService.html",[11,0.997,12,0.052,13,1.061,18,0.282,19,0.282,20,0.236,25,0.983,26,0.589,47,0.282,48,0.236,49,0.024,50,0.024,51,0.926,52,0.896,55,1.047,56,0.282,57,0.926,58,2.024,60,1.069,62,1.296,64,0.514,66,1.614,74,1.047,75,1.047,77,1.614,78,1.408,79,0.925,80,1.614,81,1.408,85,1.408,88,1.412,90,1.645,91,0.589,92,1.047,93,0.776,94,1.047,95,1.705,98,1.249,100,0.896,106,1.047,112,1.645,116,1.962,126,2.302,127,1.97,145,0.896,150,1.97,162,1.962,183,1.249,184,2.445,185,2.445,186,2.445,187,1.556,188,1.556,189,1.556,190,1.556,191,1.556,192,1.556,193,2.445,194,1.556,195,1.556,196,1.556,197,1.556,198,1.249,199,1.249,200,1.249,201,1.047,202,1.249,203,1.556,204,1.556,205,1.556,206,1.556,207,1.556,208,1.556,209,2.445,210,2.445,211,1.556,212,1.556,213,1.556,214,1.556,215,1.556,216,1.556,217,1.556,218,1.556]],["title/controllers/UserController.html",[23,1.552,109,1.343]],["body/controllers/UserController.html",[12,0.052,14,1.455,18,0.334,19,0.334,20,0.279,22,1.059,23,1.602,25,1.074,26,0.696,38,1.238,41,1.238,47,0.334,48,0.279,49,0.027,50,0.027,56,0.334,57,1.053,58,1.832,60,0.799,62,1.053,66,0.798,77,1.207,78,1.053,79,0.692,80,1.207,86,1.871,88,0.919,91,1.053,93,0.917,95,1.386,109,0.917,111,1.477,119,2.233,133,1.477,135,2.233,136,2.233,137,2.233,142,1.477,143,1.238,145,1.059,147,1.477,150,1.931,152,1.477,159,1.477,179,1.477,201,1.238,219,1.477,220,2.233,221,2.233,222,1.839,223,1.839,224,1.839,225,1.839,226,1.931,227,1.839,228,1.839,229,1.839,230,1.839,231,1.839,232,1.839,233,1.839,234,2.233,235,1.839,236,1.839,237,1.839,238,1.839,239,1.839,240,1.839,241,1.839,242,1.839,243,1.839,244,1.839,245,1.839,246,1.839,247,1.839,248,1.839,249,1.839,250,1.839,251,1.839,252,1.839,253,1.839,254,1.839,255,1.839,256,1.839,257,1.839,258,1.839,259,1.839,260,1.839,261,1.477,262,1.839,263,2.781,264,1.839]],["title/interfaces/UserRepositorie.html",[71,1.552,99,1.021]],["body/interfaces/UserRepositorie.html",[12,0.05,18,0.519,19,0.519,20,0.434,25,0.822,47,0.519,49,0.037,50,0.037,56,0.519,57,1.442,60,1.094,62,1.442,64,0.944,71,2.193,72,3.057,73,3.057,77,1.652,78,1.442,79,0.947,80,1.652,81,1.646,82,2.295,83,2.562,85,1.646,87,2.295,88,1.258,90,1.924,91,1.082,99,1.082,101,1.646,127,2.193,265,2.295,266,2.859,267,2.859,268,2.859,269,2.859]],["title/injectables/UserService.html",[14,1.169,51,1.021]],["body/injectables/UserService.html",[11,1.202,12,0.052,14,1.337,18,0.383,19,0.383,20,0.32,25,1.046,26,0.8,41,1.421,47,0.383,48,0.32,49,0.03,50,0.03,51,1.167,52,1.216,55,1.421,56,0.383,57,1.167,58,1.927,60,1.046,62,1.167,64,0.698,66,1.337,74,1.421,75,1.421,77,1.579,78,1.378,79,0.905,80,1.579,81,1.775,83,2.074,85,1.775,88,1.018,91,1.378,92,1.421,93,1.052,94,1.421,95,1.536,97,1.695,127,1.775,145,1.216,150,1.775,198,1.695,199,1.695,200,1.695,220,2.474,221,2.474,261,2.474,270,1.695,271,2.112,272,2.112,273,2.112,274,2.112,275,2.112,276,2.112,277,2.112,278,2.112,279,2.112,280,3.082]],["title/interfaces/UserServicesReturns.html",[99,1.021,281,1.814]],["body/interfaces/UserServicesReturns.html",[12,0.048,18,0.695,19,0.695,20,0.581,47,0.695,49,0.045,50,0.045,99,1.45,101,2.205,281,3.082,282,3.074]],["title/coverage.html",[283,2.938]],["body/coverage.html",[6,1.413,11,0.811,12,0.051,13,1.065,14,1.065,20,0.372,23,1.413,24,1.413,48,0.6,49,0.034,50,0.034,51,1.498,53,1.97,68,1.651,70,1.97,71,1.413,79,0.61,99,1.498,100,1.413,102,1.97,109,1.71,110,1.97,132,1.413,183,1.97,219,1.97,226,1.413,265,1.97,270,1.97,281,1.651,282,1.97,283,1.97,284,2.454,285,2.454,286,2.454,287,5.133,288,3.43,289,3.955,290,1.97,291,3.43,292,1.97,293,3.43,294,2.454,295,1.97,296,2.454,297,3.43,298,2.454,299,2.454,300,2.454]],["title/classes/createTravelBody.html",[48,0.409,132,1.552]],["body/classes/createTravelBody.html",[12,0.052,18,0.495,19,0.495,20,0.414,47,0.495,48,0.414,49,0.036,50,0.036,56,0.495,60,1.345,69,1.572,79,1.164,88,1.594,103,1.84,132,2.126,153,2.963,290,2.192,301,3.691,302,3.691,303,2.73,304,3.597,305,2.73,306,2.73,307,2.73,308,2.73,309,2.73,310,2.73,311,2.73,312,2.73,313,2.73,314,2.73]],["title/classes/createUserbody.html",[48,0.409,226,1.552]],["body/classes/createUserbody.html",[12,0.05,18,0.531,19,0.531,20,0.444,47,0.531,48,0.444,49,0.038,50,0.038,56,0.531,60,1.324,69,1.686,78,1.465,79,1.146,88,1.522,103,1.928,126,2.603,226,2.228,292,2.35,304,3.105,315,3.868,316,3.868,317,2.928,318,2.928,319,2.928,320,2.928,321,2.928,322,2.928,323,2.928,324,2.928]],["title/dependencies.html",[3,1.864,325,1.814]],["body/dependencies.html",[3,1.83,12,0.052,26,1.203,49,0.04,50,0.04,64,1.05,143,2.138,326,3.177,327,3.177,328,3.177,329,3.177,330,3.177,331,4.506,332,3.177,333,3.177,334,3.177,335,3.177,336,3.177,337,3.177,338,3.177,339,3.177,340,3.177,341,3.177,342,3.177,343,3.177,344,3.177,345,3.177]],["title/miscellaneous/functions.html",[346,1.814,347,2.598]],["body/miscellaneous/functions.html",[6,2.842,12,0.045,49,0.045,50,0.045,56,0.706,295,3.124,346,3.124,347,3.124,348,3.891]],["title/index.html",[56,0.41,349,2.26,350,2.26]],["body/index.html",[12,0.044,38,2.152,49,0.04,50,0.04,112,2.757,201,2.152,202,2.567,234,3.827,351,3.198,352,3.198,353,3.198,354,3.198,355,3.198,356,3.198,357,4.097,358,3.198,359,4.52,360,3.198,361,3.198,362,3.198,363,3.198,364,3.198,365,3.198,366,3.198,367,3.198,368,3.198,369,3.198,370,3.198,371,3.198,372,3.198]],["title/modules.html",[2,2.463]],["body/modules.html",[1,2.277,2,2.661,12,0.046,49,0.046,50,0.046,373,3.955,374,3.955,375,3.955,376,3.955]],["title/overview.html",[377,2.938]],["body/overview.html",[0,2.656,1,2.954,3,1.738,4,2.424,5,2.424,6,1.738,7,2.424,8,2.424,9,2.424,10,2.424,11,1.453,12,0.047,13,1.908,14,1.908,15,3.169,16,2.424,17,2.424,22,1.738,49,0.039,50,0.039,52,1.738,69,1.738,101,1.738,377,2.424,378,3.019,379,3.019,380,4.397]],["title/properties.html",[103,1.613,325,1.814]],["body/properties.html",[12,0.051,49,0.045,50,0.045,103,1.894,381,3.8,382,3.8,383,3.8,384,3.8,385,3.8,386,3.8]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"interfaces/PutUsersInTravelResponse.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{},"interfaces/UserServicesReturns.html":{},"coverage.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":382,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":378,"title":{},"body":{"overview.html":{}}}],["1.0.1",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["1.1.25",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":379,"title":{},"body":{"overview.html":{}}}],["3",{"_index":380,"title":{},"body":{"overview.html":{}}}],["3.23.8",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["5.19.1",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":173,"title":{},"body":{"controllers/TravelController.html":{}}}],["addusertotravellist",{"_index":113,"title":{},"body":{"controllers/TravelController.html":{}}}],["addusertotravellist(@param",{"_index":176,"title":{},"body":{"controllers/TravelController.html":{}}}],["addusertotravellist(params",{"_index":117,"title":{},"body":{"controllers/TravelController.html":{}}}],["api",{"_index":354,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":237,"title":{},"body":{"controllers/UserController.html":{}}}],["async",{"_index":58,"title":{},"body":{"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["author",{"_index":386,"title":{},"body":{"properties.html":{}}}],["await",{"_index":66,"title":{},"body":{"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["body",{"_index":135,"title":{},"body":{"controllers/TravelController.html":{},"controllers/UserController.html":{}}}],["body:createtravelbody):promise",{"_index":149,"title":{},"body":{"controllers/TravelController.html":{}}}],["body:createuserbody",{"_index":251,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":376,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":373,"title":{},"body":{"modules.html":{}}}],["class",{"_index":48,"title":{"classes/PrismaUserRepositorie.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{}},"body":{"modules/AppModule.html":{},"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{}}}],["classe",{"_index":245,"title":{},"body":{"controllers/UserController.html":{}}}],["classes",{"_index":69,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cmd",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["coisa",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["com",{"_index":247,"title":{},"body":{"controllers/UserController.html":{}}}],["compodoc/compodoc",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["const",{"_index":150,"title":{},"body":{"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":74,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"injectables/TravelService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":75,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"injectables/TravelService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":93,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["controladores",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["controler",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":109,"title":{"controllers/TravelController.html":{},"controllers/UserController.html":{}},"body":{"controllers/TravelController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('travel",{"_index":144,"title":{},"body":{"controllers/TravelController.html":{}}}],["controller('user",{"_index":231,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/TravelController.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["controllers/travel.controller",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/user.controller",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["coverage",{"_index":283,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":72,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"interfaces/UserRepositorie.html":{}}}],["create(data",{"_index":82,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"interfaces/UserRepositorie.html":{}}}],["create(data:prisma.useruncheckedcreateinput):promise",{"_index":268,"title":{},"body":{"interfaces/UserRepositorie.html":{}}}],["createtravelbody",{"_index":132,"title":{"classes/createTravelBody.html":{}},"body":{"controllers/TravelController.html":{},"coverage.html":{},"classes/createTravelBody.html":{}}}],["createuserbody",{"_index":226,"title":{"classes/createUserbody.html":{}},"body":{"controllers/UserController.html":{},"coverage.html":{},"classes/createUserbody.html":{}}}],["criar",{"_index":200,"title":{},"body":{"injectables/TravelService.html":{},"injectables/UserService.html":{}}}],["criaçao",{"_index":368,"title":{},"body":{"index.html":{}}}],["da",{"_index":244,"title":{},"body":{"controllers/UserController.html":{}}}],["data",{"_index":85,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"injectables/TravelService.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{}}}],["date",{"_index":307,"title":{},"body":{"classes/createTravelBody.html":{}}}],["de",{"_index":234,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declaraçao",{"_index":243,"title":{},"body":{"controllers/UserController.html":{}}}],["decorators",{"_index":119,"title":{},"body":{"controllers/TravelController.html":{},"controllers/UserController.html":{}}}],["defined",{"_index":60,"title":{},"body":{"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{}}}],["definido",{"_index":249,"title":{},"body":{"controllers/UserController.html":{}}}],["dependencia",{"_index":238,"title":{},"body":{"controllers/UserController.html":{}}}],["dependencias",{"_index":236,"title":{},"body":{"controllers/UserController.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":383,"title":{},"body":{"properties.html":{}}}],["deve",{"_index":239,"title":{},"body":{"controllers/UserController.html":{}}}],["documentation",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["e",{"_index":369,"title":{},"body":{"index.html":{}}}],["email",{"_index":315,"title":{},"body":{"classes/createUserbody.html":{}}}],["email,name,password,travelid",{"_index":252,"title":{},"body":{"controllers/UserController.html":{}}}],["email,password,travelid,name",{"_index":257,"title":{},"body":{"controllers/UserController.html":{}}}],["email:string",{"_index":321,"title":{},"body":{"classes/createUserbody.html":{}}}],["email:z.string().email",{"_index":253,"title":{},"body":{"controllers/UserController.html":{}}}],["entre",{"_index":360,"title":{},"body":{"index.html":{}}}],["esta",{"_index":353,"title":{},"body":{"index.html":{}}}],["export",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"interfaces/PutUsersInTravelResponse.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{},"interfaces/UserServicesReturns.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":54,"title":{},"body":{"injectables/PrismaServices.html":{}}}],["faker",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["features",{"_index":365,"title":{},"body":{"index.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"interfaces/PutUsersInTravelResponse.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{},"interfaces/UserServicesReturns.html":{},"coverage.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{}}}],["findbyid",{"_index":73,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"interfaces/UserRepositorie.html":{}}}],["findbyid(userid",{"_index":87,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"interfaces/UserRepositorie.html":{}}}],["findbyid(userid:string):promise",{"_index":269,"title":{},"body":{"interfaces/UserRepositorie.html":{}}}],["fornecida",{"_index":241,"title":{},"body":{"controllers/UserController.html":{}}}],["framework",{"_index":363,"title":{},"body":{"index.html":{}}}],["from,notes,title,where,traveldate",{"_index":151,"title":{},"body":{"controllers/TravelController.html":{}}}],["from,notes,where,title,traveldate",{"_index":161,"title":{},"body":{"controllers/TravelController.html":{}}}],["from:string",{"_index":312,"title":{},"body":{"classes/createTravelBody.html":{}}}],["from:z.string",{"_index":156,"title":{},"body":{"controllers/TravelController.html":{}}}],["function",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":347,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gerenciamento",{"_index":358,"title":{},"body":{"index.html":{}}}],["get(\"/:id",{"_index":258,"title":{},"body":{"controllers/UserController.html":{}}}],["get(\"/:travelid",{"_index":170,"title":{},"body":{"controllers/TravelController.html":{}}}],["get(\"/list/:travelid",{"_index":164,"title":{},"body":{"controllers/TravelController.html":{}}}],["get('/:id",{"_index":223,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/:travelid",{"_index":124,"title":{},"body":{"controllers/TravelController.html":{}}}],["get('/list/:travelid",{"_index":129,"title":{},"body":{"controllers/TravelController.html":{}}}],["getting",{"_index":349,"title":{"index.html":{}},"body":{}}],["gettravel",{"_index":184,"title":{},"body":{"injectables/TravelService.html":{}}}],["gettravel(travelid",{"_index":188,"title":{},"body":{"injectables/TravelService.html":{}}}],["gettravel(travelid:string):promise",{"_index":208,"title":{},"body":{"injectables/TravelService.html":{}}}],["gettravelinfo",{"_index":114,"title":{},"body":{"controllers/TravelController.html":{}}}],["gettravelinfo(@param(\"travelid",{"_index":171,"title":{},"body":{"controllers/TravelController.html":{}}}],["gettravelinfo(travelid",{"_index":123,"title":{},"body":{"controllers/TravelController.html":{}}}],["gettravellist",{"_index":115,"title":{},"body":{"controllers/TravelController.html":{}}}],["gettravellist(@param(\"travelid",{"_index":165,"title":{},"body":{"controllers/TravelController.html":{}}}],["gettravellist(travelid",{"_index":128,"title":{},"body":{"controllers/TravelController.html":{}}}],["gettravelusers",{"_index":185,"title":{},"body":{"injectables/TravelService.html":{}}}],["gettravelusers(travelid",{"_index":190,"title":{},"body":{"injectables/TravelService.html":{}}}],["gettravelusers(travelid:string):promise",{"_index":206,"title":{},"body":{"injectables/TravelService.html":{}}}],["getuser",{"_index":220,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuser(@param(\"id",{"_index":259,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(id",{"_index":272,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(id:string):promise",{"_index":279,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(param",{"_index":222,"title":{},"body":{"controllers/UserController.html":{}}}],["grupos",{"_index":361,"title":{},"body":{"index.html":{}}}],["id",{"_index":261,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id:travelid",{"_index":210,"title":{},"body":{"injectables/TravelService.html":{}}}],["id:userid",{"_index":98,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"injectables/TravelService.html":{}}}],["identifica",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["identifier",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":65,"title":{},"body":{"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{}}}],["import",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"interfaces/PutUsersInTravelResponse.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":56,"title":{"index.html":{}},"body":{"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"interfaces/PutUsersInTravelResponse.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"interfaces/PutUsersInTravelResponse.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{},"interfaces/UserServicesReturns.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{}}}],["informations",{"_index":169,"title":{},"body":{"controllers/TravelController.html":{}}}],["injectable",{"_index":51,"title":{"injectables/PrismaServices.html":{},"injectables/TravelService.html":{},"injectables/UserService.html":{}},"body":{"injectables/PrismaServices.html":{},"injectables/TravelService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":52,"title":{},"body":{"injectables/PrismaServices.html":{},"injectables/TravelService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inside",{"_index":163,"title":{},"body":{"controllers/TravelController.html":{}}}],["interface",{"_index":99,"title":{"interfaces/PutUsersInTravelResponse.html":{},"interfaces/UserRepositorie.html":{},"interfaces/UserServicesReturns.html":{}},"body":{"interfaces/PutUsersInTravelResponse.html":{},"interfaces/UserRepositorie.html":{},"interfaces/UserServicesReturns.html":{},"coverage.html":{}}}],["interfaces",{"_index":101,"title":{},"body":{"interfaces/PutUsersInTravelResponse.html":{},"interfaces/UserRepositorie.html":{},"interfaces/UserServicesReturns.html":{},"overview.html":{}}}],["inversao",{"_index":235,"title":{},"body":{"controllers/UserController.html":{}}}],["js/faker",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["lib/prisma.service",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":384,"title":{},"body":{"properties.html":{}}}],["list",{"_index":174,"title":{},"body":{"controllers/TravelController.html":{}}}],["lista",{"_index":202,"title":{},"body":{"injectables/TravelService.html":{},"index.html":{}}}],["literal",{"_index":118,"title":{},"body":{"controllers/TravelController.html":{}}}],["matching",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"interfaces/PutUsersInTravelResponse.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{},"interfaces/UserServicesReturns.html":{},"coverage.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["metadata",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":57,"title":{},"body":{"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":346,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["na",{"_index":242,"title":{},"body":{"controllers/UserController.html":{}}}],["name",{"_index":78,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{},"classes/createUserbody.html":{}}}],["name:string",{"_index":324,"title":{},"body":{"classes/createUserbody.html":{}}}],["name:z.string().optional",{"_index":255,"title":{},"body":{"controllers/UserController.html":{}}}],["nao",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaServices.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["node",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["notes",{"_index":301,"title":{},"body":{"classes/createTravelBody.html":{}}}],["notes:string",{"_index":313,"title":{},"body":{"classes/createTravelBody.html":{}}}],["notes:z.string",{"_index":157,"title":{},"body":{"controllers/TravelController.html":{}}}],["null",{"_index":304,"title":{},"body":{"classes/createTravelBody.html":{},"classes/createUserbody.html":{}}}],["o",{"_index":357,"title":{},"body":{"index.html":{}}}],["onmoduledestroy",{"_index":63,"title":{},"body":{"injectables/PrismaServices.html":{}}}],["onmoduleinit",{"_index":59,"title":{},"body":{"injectables/PrismaServices.html":{}}}],["optional",{"_index":80,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{}}}],["organizaço",{"_index":370,"title":{},"body":{"index.html":{}}}],["os",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["ou",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":377,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":325,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":199,"title":{},"body":{"injectables/TravelService.html":{},"injectables/UserService.html":{}}}],["param",{"_index":136,"title":{},"body":{"controllers/TravelController.html":{},"controllers/UserController.html":{}}}],["param:string",{"_index":260,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":77,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{}}}],["params",{"_index":122,"title":{},"body":{"controllers/TravelController.html":{}}}],["params:{travelid:string,userid:string",{"_index":177,"title":{},"body":{"controllers/TravelController.html":{}}}],["parse(body",{"_index":159,"title":{},"body":{"controllers/TravelController.html":{},"controllers/UserController.html":{}}}],["parse(params",{"_index":181,"title":{},"body":{"controllers/TravelController.html":{}}}],["password",{"_index":316,"title":{},"body":{"classes/createUserbody.html":{}}}],["password:string",{"_index":323,"title":{},"body":{"classes/createUserbody.html":{}}}],["password:z.string",{"_index":254,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":248,"title":{},"body":{"controllers/UserController.html":{}}}],["permite",{"_index":356,"title":{},"body":{"index.html":{}}}],["planer",{"_index":351,"title":{},"body":{"index.html":{}}}],["planner",{"_index":352,"title":{},"body":{"index.html":{}}}],["post",{"_index":137,"title":{},"body":{"controllers/TravelController.html":{},"controllers/UserController.html":{}}}],["post(\"/create",{"_index":147,"title":{},"body":{"controllers/TravelController.html":{},"controllers/UserController.html":{}}}],["post('/create",{"_index":133,"title":{},"body":{"controllers/TravelController.html":{},"controllers/UserController.html":{}}}],["posttravel",{"_index":116,"title":{},"body":{"controllers/TravelController.html":{},"injectables/TravelService.html":{}}}],["posttravel(@body",{"_index":148,"title":{},"body":{"controllers/TravelController.html":{}}}],["posttravel(body",{"_index":131,"title":{},"body":{"controllers/TravelController.html":{}}}],["posttravel(data",{"_index":192,"title":{},"body":{"injectables/TravelService.html":{}}}],["posttravel(data:prisma.travellistcreateinput):promise",{"_index":204,"title":{},"body":{"injectables/TravelService.html":{}}}],["postuser",{"_index":221,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["postuser(@body",{"_index":250,"title":{},"body":{"controllers/UserController.html":{}}}],["postuser(body",{"_index":225,"title":{},"body":{"controllers/UserController.html":{}}}],["postuser(data",{"_index":274,"title":{},"body":{"injectables/UserService.html":{}}}],["postuser(data:prisma.useruncheckedcreateinput):promise",{"_index":277,"title":{},"body":{"injectables/UserService.html":{}}}],["prefix",{"_index":111,"title":{},"body":{"controllers/TravelController.html":{},"controllers/UserController.html":{}}}],["principio",{"_index":232,"title":{},"body":{"controllers/UserController.html":{}}}],["prisma",{"_index":81,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"injectables/TravelService.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{}}}],["prisma.travellistcreateinput",{"_index":193,"title":{},"body":{"injectables/TravelService.html":{}}}],["prisma.useruncheckedcreateinput",{"_index":83,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{}}}],["prisma/client",{"_index":64,"title":{},"body":{"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"interfaces/PutUsersInTravelResponse.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prisma:prismaservices",{"_index":94,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"injectables/TravelService.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":55,"title":{},"body":{"injectables/PrismaServices.html":{},"injectables/TravelService.html":{},"injectables/UserService.html":{}}}],["prismaservices",{"_index":11,"title":{"injectables/PrismaServices.html":{}},"body":{"modules/AppModule.html":{},"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"injectables/TravelService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["prismaservices,userservice",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["prismauserrepositorie",{"_index":68,"title":{"classes/PrismaUserRepositorie.html":{}},"body":{"classes/PrismaUserRepositorie.html":{},"coverage.html":{}}}],["projeto",{"_index":372,"title":{},"body":{"index.html":{}}}],["promise",{"_index":127,"title":{},"body":{"controllers/TravelController.html":{},"injectables/TravelService.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":103,"title":{"properties.html":{}},"body":{"interfaces/PutUsersInTravelResponse.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{},"properties.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ps",{"_index":280,"title":{},"body":{"injectables/UserService.html":{}}}],["put",{"_index":138,"title":{},"body":{"controllers/TravelController.html":{}}}],["put(\"/travel/add/:travelid/:userid",{"_index":175,"title":{},"body":{"controllers/TravelController.html":{}}}],["put('/travel/add/:travelid/:userid",{"_index":120,"title":{},"body":{"controllers/TravelController.html":{}}}],["putuserintravel",{"_index":186,"title":{},"body":{"injectables/TravelService.html":{}}}],["putuserintravel(travelid",{"_index":195,"title":{},"body":{"injectables/TravelService.html":{}}}],["putuserintravel(travelid:string",{"_index":211,"title":{},"body":{"injectables/TravelService.html":{}}}],["putusersintravelresponse",{"_index":100,"title":{"interfaces/PutUsersInTravelResponse.html":{}},"body":{"interfaces/PutUsersInTravelResponse.html":{},"injectables/TravelService.html":{},"coverage.html":{}}}],["qualquer",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["que",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"index.html":{}}}],["readonly",{"_index":145,"title":{},"body":{"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["receber",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["reflect",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["req",{"_index":139,"title":{},"body":{"controllers/TravelController.html":{}}}],["res",{"_index":228,"title":{},"body":{"controllers/UserController.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":263,"title":{},"body":{"controllers/UserController.html":{}}}],["restjs",{"_index":364,"title":{},"body":{"index.html":{}}}],["results",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"interfaces/PutUsersInTravelResponse.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{},"interfaces/UserServicesReturns.html":{},"coverage.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":95,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":62,"title":{},"body":{"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{}}}],["rodando",{"_index":371,"title":{},"body":{"index.html":{}}}],["rota",{"_index":246,"title":{},"body":{"controllers/UserController.html":{}}}],["rotas",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["seja",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["ser",{"_index":240,"title":{},"body":{"controllers/UserController.html":{}}}],["services/travel.service",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["services/user.service",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["serviço",{"_index":198,"title":{},"body":{"injectables/TravelService.html":{},"injectables/UserService.html":{}}}],["simples",{"_index":355,"title":{},"body":{"index.html":{}}}],["solid",{"_index":233,"title":{},"body":{"controllers/UserController.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaServices.html":{},"classes/PrismaUserRepositorie.html":{},"interfaces/PutUsersInTravelResponse.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{},"interfaces/UserServicesReturns.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{}}}],["src/.../main.ts",{"_index":348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["src/controllers/travel.controller.ts",{"_index":110,"title":{},"body":{"controllers/TravelController.html":{},"coverage.html":{}}}],["src/controllers/travel.controller.ts:12",{"_index":134,"title":{},"body":{"controllers/TravelController.html":{}}}],["src/controllers/travel.controller.ts:26",{"_index":130,"title":{},"body":{"controllers/TravelController.html":{}}}],["src/controllers/travel.controller.ts:31",{"_index":125,"title":{},"body":{"controllers/TravelController.html":{}}}],["src/controllers/travel.controller.ts:36",{"_index":121,"title":{},"body":{"controllers/TravelController.html":{}}}],["src/controllers/user.controller.ts",{"_index":219,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/controllers/user.controller.ts:13",{"_index":227,"title":{},"body":{"controllers/UserController.html":{}}}],["src/controllers/user.controller.ts:25",{"_index":224,"title":{},"body":{"controllers/UserController.html":{}}}],["src/dtos/bodytypes/createtravelbody",{"_index":140,"title":{},"body":{"controllers/TravelController.html":{}}}],["src/dtos/bodytypes/createtravelbody.ts",{"_index":290,"title":{},"body":{"coverage.html":{},"classes/createTravelBody.html":{}}}],["src/dtos/bodytypes/createtravelbody.ts:2",{"_index":306,"title":{},"body":{"classes/createTravelBody.html":{}}}],["src/dtos/bodytypes/createtravelbody.ts:3",{"_index":309,"title":{},"body":{"classes/createTravelBody.html":{}}}],["src/dtos/bodytypes/createtravelbody.ts:4",{"_index":303,"title":{},"body":{"classes/createTravelBody.html":{}}}],["src/dtos/bodytypes/createtravelbody.ts:5",{"_index":305,"title":{},"body":{"classes/createTravelBody.html":{}}}],["src/dtos/bodytypes/createtravelbody.ts:6",{"_index":308,"title":{},"body":{"classes/createTravelBody.html":{}}}],["src/dtos/bodytypes/createuserbody",{"_index":229,"title":{},"body":{"controllers/UserController.html":{}}}],["src/dtos/bodytypes/createuserbody.ts",{"_index":292,"title":{},"body":{"coverage.html":{},"classes/createUserbody.html":{}}}],["src/dtos/bodytypes/createuserbody.ts:2",{"_index":317,"title":{},"body":{"classes/createUserbody.html":{}}}],["src/dtos/bodytypes/createuserbody.ts:3",{"_index":320,"title":{},"body":{"classes/createUserbody.html":{}}}],["src/dtos/bodytypes/createuserbody.ts:4",{"_index":319,"title":{},"body":{"classes/createUserbody.html":{}}}],["src/dtos/bodytypes/createuserbody.ts:5",{"_index":318,"title":{},"body":{"classes/createUserbody.html":{}}}],["src/dtos/interfaces/travelservicesreturns",{"_index":197,"title":{},"body":{"injectables/TravelService.html":{}}}],["src/dtos/interfaces/travelservicesreturns.ts",{"_index":102,"title":{},"body":{"interfaces/PutUsersInTravelResponse.html":{},"coverage.html":{}}}],["src/dtos/interfaces/userservicesreturns.ts",{"_index":282,"title":{},"body":{"interfaces/UserServicesReturns.html":{},"coverage.html":{}}}],["src/lib/prisma.service",{"_index":92,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"injectables/TravelService.html":{},"injectables/UserService.html":{}}}],["src/lib/prisma.service.ts",{"_index":53,"title":{},"body":{"injectables/PrismaServices.html":{},"coverage.html":{}}}],["src/lib/prisma.service.ts:7",{"_index":61,"title":{},"body":{"injectables/PrismaServices.html":{}}}],["src/main.ts",{"_index":295,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/repositorie/prismarepositorie/prismauserrepositorie.ts",{"_index":70,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"coverage.html":{}}}],["src/repositorie/prismarepositorie/prismauserrepositorie.ts:10",{"_index":89,"title":{},"body":{"classes/PrismaUserRepositorie.html":{}}}],["src/repositorie/prismarepositorie/prismauserrepositorie.ts:5",{"_index":76,"title":{},"body":{"classes/PrismaUserRepositorie.html":{}}}],["src/repositorie/prismarepositorie/prismauserrepositorie.ts:7",{"_index":84,"title":{},"body":{"classes/PrismaUserRepositorie.html":{}}}],["src/repositorie/userrepositorie.ts",{"_index":265,"title":{},"body":{"interfaces/UserRepositorie.html":{},"coverage.html":{}}}],["src/repositorie/userrepositorie.ts:4",{"_index":266,"title":{},"body":{"interfaces/UserRepositorie.html":{}}}],["src/repositorie/userrepositorie.ts:5",{"_index":267,"title":{},"body":{"interfaces/UserRepositorie.html":{}}}],["src/services/travel.service",{"_index":141,"title":{},"body":{"controllers/TravelController.html":{}}}],["src/services/travel.service.ts",{"_index":183,"title":{},"body":{"injectables/TravelService.html":{},"coverage.html":{}}}],["src/services/travel.service.ts:11",{"_index":194,"title":{},"body":{"injectables/TravelService.html":{}}}],["src/services/travel.service.ts:15",{"_index":191,"title":{},"body":{"injectables/TravelService.html":{}}}],["src/services/travel.service.ts:23",{"_index":189,"title":{},"body":{"injectables/TravelService.html":{}}}],["src/services/travel.service.ts:30",{"_index":196,"title":{},"body":{"injectables/TravelService.html":{}}}],["src/services/travel.service.ts:7",{"_index":187,"title":{},"body":{"injectables/TravelService.html":{}}}],["src/services/user.service",{"_index":230,"title":{},"body":{"controllers/UserController.html":{}}}],["src/services/user.service.ts",{"_index":270,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/user.service.ts:15",{"_index":273,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:6",{"_index":271,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:9",{"_index":275,"title":{},"body":{"injectables/UserService.html":{}}}],["started",{"_index":350,"title":{"index.html":{}},"body":{}}],["statements",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":88,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{}}}],["support",{"_index":374,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":375,"title":{},"body":{"modules.html":{}}}],["table",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["this.$connect",{"_index":67,"title":{},"body":{"injectables/PrismaServices.html":{}}}],["this.prisma.travellist.create({data",{"_index":205,"title":{},"body":{"injectables/TravelService.html":{}}}],["this.prisma.travellist.findunique",{"_index":209,"title":{},"body":{"injectables/TravelService.html":{}}}],["this.prisma.user.create",{"_index":278,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.create({data",{"_index":96,"title":{},"body":{"classes/PrismaUserRepositorie.html":{}}}],["this.prisma.user.findmany",{"_index":207,"title":{},"body":{"injectables/TravelService.html":{}}}],["this.prisma.user.findunique",{"_index":97,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":215,"title":{},"body":{"injectables/TravelService.html":{}}}],["this.travelservices.gettravel(travelid",{"_index":172,"title":{},"body":{"controllers/TravelController.html":{}}}],["this.travelservices.gettravelusers(travelid",{"_index":167,"title":{},"body":{"controllers/TravelController.html":{}}}],["this.travelservices.posttravel",{"_index":160,"title":{},"body":{"controllers/TravelController.html":{}}}],["this.travelservices.putuserintravel(travelid,userid",{"_index":182,"title":{},"body":{"controllers/TravelController.html":{}}}],["this.userservice.getuser(id",{"_index":264,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.postuser",{"_index":256,"title":{},"body":{"controllers/UserController.html":{}}}],["title",{"_index":153,"title":{},"body":{"controllers/TravelController.html":{},"classes/createTravelBody.html":{}}}],["title:string",{"_index":310,"title":{},"body":{"classes/createTravelBody.html":{}}}],["travel",{"_index":112,"title":{},"body":{"controllers/TravelController.html":{},"injectables/TravelService.html":{},"index.html":{}}}],["travelcontroller",{"_index":24,"title":{"controllers/TravelController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TravelController.html":{},"coverage.html":{}}}],["traveldate",{"_index":302,"title":{},"body":{"classes/createTravelBody.html":{}}}],["traveldate:date",{"_index":314,"title":{},"body":{"classes/createTravelBody.html":{}}}],["traveldate:z.date",{"_index":158,"title":{},"body":{"controllers/TravelController.html":{}}}],["travelid",{"_index":126,"title":{},"body":{"controllers/TravelController.html":{},"injectables/TravelService.html":{},"classes/createUserbody.html":{}}}],["travelid,userid",{"_index":178,"title":{},"body":{"controllers/TravelController.html":{}}}],["travelid:string",{"_index":322,"title":{},"body":{"classes/createUserbody.html":{}}}],["travelid:string):promise",{"_index":166,"title":{},"body":{"controllers/TravelController.html":{}}}],["travelid:unique.id",{"_index":216,"title":{},"body":{"injectables/TravelService.html":{}}}],["travelid:z.string().uuid",{"_index":179,"title":{},"body":{"controllers/TravelController.html":{},"controllers/UserController.html":{}}}],["travelist",{"_index":168,"title":{},"body":{"controllers/TravelController.html":{}}}],["travellist",{"_index":106,"title":{},"body":{"interfaces/PutUsersInTravelResponse.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{}}}],["travelrefered",{"_index":104,"title":{},"body":{"interfaces/PutUsersInTravelResponse.html":{}}}],["travelrefered:travellist",{"_index":108,"title":{},"body":{"interfaces/PutUsersInTravelResponse.html":{}}}],["travelrefered:unique",{"_index":218,"title":{},"body":{"injectables/TravelService.html":{}}}],["travelservice",{"_index":13,"title":{"injectables/TravelService.html":{}},"body":{"modules/AppModule.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"coverage.html":{},"overview.html":{}}}],["travelservices:travelservice",{"_index":146,"title":{},"body":{"controllers/TravelController.html":{}}}],["type",{"_index":79,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"interfaces/PutUsersInTravelResponse.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/createTravelBody.html":{},"classes/createUserbody.html":{}}}],["um",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["uma",{"_index":201,"title":{},"body":{"injectables/TravelService.html":{},"controllers/UserController.html":{},"index.html":{}}}],["unique",{"_index":213,"title":{},"body":{"injectables/TravelService.html":{}}}],["unknown",{"_index":86,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"controllers/TravelController.html":{},"controllers/UserController.html":{}}}],["unlicensed",{"_index":385,"title":{},"body":{"properties.html":{}}}],["update",{"_index":214,"title":{},"body":{"injectables/TravelService.html":{}}}],["user",{"_index":91,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"interfaces/PutUsersInTravelResponse.html":{},"controllers/TravelController.html":{},"injectables/TravelService.html":{},"controllers/UserController.html":{},"interfaces/UserRepositorie.html":{},"injectables/UserService.html":{}}}],["useradded",{"_index":105,"title":{},"body":{"interfaces/PutUsersInTravelResponse.html":{}}}],["useradded:update",{"_index":217,"title":{},"body":{"injectables/TravelService.html":{}}}],["useradded:user",{"_index":107,"title":{},"body":{"interfaces/PutUsersInTravelResponse.html":{}}}],["usercontroller",{"_index":23,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["userid",{"_index":90,"title":{},"body":{"classes/PrismaUserRepositorie.html":{},"injectables/TravelService.html":{},"interfaces/UserRepositorie.html":{}}}],["userid:string):promise",{"_index":212,"title":{},"body":{"injectables/TravelService.html":{}}}],["userid:z.string().uuid",{"_index":180,"title":{},"body":{"controllers/TravelController.html":{}}}],["userrepositorie",{"_index":71,"title":{"interfaces/UserRepositorie.html":{}},"body":{"classes/PrismaUserRepositorie.html":{},"interfaces/UserRepositorie.html":{},"coverage.html":{}}}],["users",{"_index":162,"title":{},"body":{"controllers/TravelController.html":{},"injectables/TravelService.html":{}}}],["userservice",{"_index":14,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservicesreturns",{"_index":281,"title":{"interfaces/UserServicesReturns.html":{}},"body":{"interfaces/UserServicesReturns.html":{},"coverage.html":{}}}],["usuário",{"_index":276,"title":{},"body":{"injectables/UserService.html":{}}}],["usuários",{"_index":367,"title":{},"body":{"index.html":{}}}],["utilizando",{"_index":362,"title":{},"body":{"index.html":{}}}],["validaçao",{"_index":366,"title":{},"body":{"index.html":{}}}],["version",{"_index":381,"title":{},"body":{"properties.html":{}}}],["viagem",{"_index":203,"title":{},"body":{"injectables/TravelService.html":{}}}],["viagens",{"_index":359,"title":{},"body":{"index.html":{}}}],["where:string",{"_index":311,"title":{},"body":{"classes/createTravelBody.html":{}}}],["where:z.string",{"_index":155,"title":{},"body":{"controllers/TravelController.html":{}}}],["z",{"_index":142,"title":{},"body":{"controllers/TravelController.html":{},"controllers/UserController.html":{}}}],["z.object",{"_index":152,"title":{},"body":{"controllers/TravelController.html":{},"controllers/UserController.html":{}}}],["z.string().optional",{"_index":154,"title":{},"body":{"controllers/TravelController.html":{}}}],["z.string().parse(param",{"_index":262,"title":{},"body":{"controllers/UserController.html":{}}}],["zod",{"_index":143,"title":{},"body":{"controllers/TravelController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nPrismaServices\n\nPrismaServices\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPrismaServices->AppModule\n\n\n\n\n\nTravelService\n\nTravelService\n\nAppModule -->\n\nTravelService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaServices\n                        \n                        \n                            TravelService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                        \n                            TravelController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './controllers/user.controller';\nimport { UserService } from './services/user.service';\nimport { TravelController } from './controllers/travel.controller';\nimport { TravelService } from './services/travel.service';\nimport { PrismaServices } from './lib/prisma.service';\n\n@Module({\n  imports: [],\n  //identifica os controladores\n  controllers: [UserController, TravelController],\n  //identifica os providers (qualquer coisa que nao seja um controler, ou seja qualquer coisa que nao receber rotas)\n  providers: [PrismaServices,UserService, TravelService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaServices.html":{"url":"injectables/PrismaServices.html","title":"injectable - PrismaServices","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaServices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/prisma.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleDestroy, OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n\n\n@Injectable()\nexport class PrismaServices extends PrismaClient implements OnModuleInit{\n    async onModuleInit() {\n        await this.$connect()\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaUserRepositorie.html":{"url":"classes/PrismaUserRepositorie.html","title":"class - PrismaUserRepositorie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaUserRepositorie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositorie/PrismaRepositorie/PrismaUserRepositorie.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            UserRepositorie\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaServices)\n                    \n                \n                        \n                            \n                                Defined in src/repositorie/PrismaRepositorie/PrismaUserRepositorie.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaServices\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Prisma.UserUncheckedCreateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositorie/PrismaRepositorie/PrismaUserRepositorie.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Prisma.UserUncheckedCreateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(UserId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositorie/PrismaRepositorie/PrismaUserRepositorie.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                UserId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Prisma, User } from \"@prisma/client\";\nimport { UserRepositorie } from \"../UserRepositorie\";\nimport { PrismaServices } from \"src/lib/prisma.service\";\n\nexport class PrismaUserRepositorie implements UserRepositorie{\n    constructor(private prisma:PrismaServices){}\n    async create(data: Prisma.UserUncheckedCreateInput){\n        return await this.prisma.user.create({data})\n    }\n    async findById(UserId: string){\n        return await this.prisma.user.findUnique({\n            where:{\n                Id:UserId\n            }\n        })\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PutUsersInTravelResponse.html":{"url":"interfaces/PutUsersInTravelResponse.html","title":"interface - PutUsersInTravelResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PutUsersInTravelResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dtos/interfaces/TravelServicesReturns.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            TravelRefered\n                                        \n                                \n                                \n                                        \n                                            userAdded\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        TravelRefered\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TravelRefered:     TravelList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TravelList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userAdded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userAdded:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TravelList, User } from \"@prisma/client\";\n\nexport interface PutUsersInTravelResponse {\n    userAdded:User,\n    TravelRefered:TravelList\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TravelController.html":{"url":"controllers/TravelController.html","title":"controller - TravelController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TravelController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/travel.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                travel\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                addUserToTravelList\n                            \n                            \n                                    \n                                    Async\n                                getTravelInfo\n                            \n                            \n                                    \n                                    Async\n                                GetTravelList\n                            \n                            \n                                    \n                                    Async\n                                PostTravel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        addUserToTravelList\n                        \n                    \n                \n            \n            \n                \n                        \n                    addUserToTravelList(params: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/travel/add/:TravelId/:UserId')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/travel.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getTravelInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTravelInfo(travelId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:travelId')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/travel.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                travelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        GetTravelList\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetTravelList(travelId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list/:travelId')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/travel.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                travelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        PostTravel\n                        \n                    \n                \n            \n            \n                \n                        \n                    PostTravel(body: createTravelBody)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/travel.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            createTravelBody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Put, Req } from '@nestjs/common';\nimport { TravelList, User } from '@prisma/client';\nimport { createTravelBody } from 'src/dtos/bodyTypes/createTravelBody';\nimport { TravelService } from 'src/services/travel.service';\nimport { z } from 'zod';\n\n@Controller('travel')\nexport class TravelController {\n    constructor(private readonly TravelServices:TravelService){}\n    \n    @Post(\"/create\")\n    async PostTravel(@Body() body:createTravelBody):Promise{\n        const { From,Notes,Title,Where,TravelDate} = z.object({\n            Title: z.string().optional(),\n            Where:z.string(),\n            From:z.string(),\n            Notes:z.string(),\n            TravelDate:z.date()\n        }).parse(body)\n            return this.TravelServices.PostTravel({\n            From,Notes,Where,Title,TravelDate\n        })\n    }\n    //return all the users inside this travelList \n    @Get(\"/list/:travelId\")\n    async GetTravelList(@Param(\"travelId\") travelId:string):Promise{\n        return this.TravelServices.GetTravelUsers(travelId)\n    }\n    //return this travelist informations\n    @Get(\"/:travelId\")\n    async getTravelInfo(@Param(\"travelId\") travelId:string):Promise{\n        return this.TravelServices.GetTravel(travelId)\n    }\n    //add a user to a travel list\n    @Put(\"/travel/add/:TravelId/:UserId\")\n    async addUserToTravelList(@Param() params:{TravelId:string,UserId:string}){\n        const  {TravelId,UserId} = z.object({\n            TravelId:z.string().uuid(),\n            UserId:z.string().uuid()\n        }).parse(params)\n        return await this.TravelServices.PutUserInTravel(TravelId,UserId)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TravelService.html":{"url":"injectables/TravelService.html","title":"injectable - TravelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TravelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/travel.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                GetTravel\n                            \n                            \n                                    Async\n                                GetTravelUsers\n                            \n                            \n                                    Async\n                                PostTravel\n                            \n                            \n                                    Async\n                                PutUserInTravel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaServices)\n                    \n                \n                        \n                            \n                                Defined in src/services/travel.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaServices\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        GetTravel\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetTravel(travelId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/travel.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                travelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        GetTravelUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetTravelUsers(travelId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/travel.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                travelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        PostTravel\n                        \n                    \n                \n            \n            \n                \n                        \n                    PostTravel(data: Prisma.TravelListCreateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/travel.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Prisma.TravelListCreateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        PutUserInTravel\n                        \n                    \n                \n            \n            \n                \n                        \n                    PutUserInTravel(travelId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/travel.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                travelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma, PrismaClient, TravelList, User } from '@prisma/client';\nimport { PutUsersInTravelResponse } from 'src/dtos/interfaces/TravelServicesReturns';\nimport { PrismaServices } from 'src/lib/prisma.service';\n\n@Injectable()\nexport class TravelService {\n    constructor(private readonly prisma:PrismaServices){}\n    \n  //serviço para criar uma lista viagem\n  async PostTravel(data:Prisma.TravelListCreateInput):Promise{\n    const Travel = await this.prisma.travelList.create({data})\n    return Travel\n  }\n  async GetTravelUsers(travelId:string):Promise{\n    const users = await this.prisma.user.findMany({\n      where:{\n        travelId,\n      }\n    })\n    return users\n  }\n  async GetTravel(travelId:string):Promise{\n    return await this.prisma.travelList.findUnique({\n      where:{\n        Id:travelId\n      }\n    })\n  }\n  async PutUserInTravel(travelId:string, userId:string):Promise{\n    const unique = await this.prisma.travelList.findUnique({\n      where:{\n        Id:travelId\n      }\n    })\n    const update = await this.prisma.user.update({\n      where:{\n        Id:userId\n      },\n      data:{\n        travelId:unique.Id\n      }\n    })\n\n    return {\n      userAdded:update,\n      TravelRefered:unique\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                GetUser\n                            \n                            \n                                    \n                                    Async\n                                PostUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        GetUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetUser(param: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:Id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/user.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        PostUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    PostUser(body: createUserbody)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/user.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            createUserbody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Res } from '@nestjs/common';\n\nimport { createUserbody } from 'src/dtos/bodyTypes/createUserBody';\nimport { UserService } from 'src/services/user.service';\nimport { z } from 'zod';\n\n@Controller('user')\nexport class UserController {\n  //principio solid de inversao de dependencias, appService é uma dependencia que deve ser fornecida na declaraçao da classe\n  constructor(private readonly userService: UserService) {}\n    //rota post com um path definido \"user\"\n    @Post(\"/create\")\n    async PostUser(@Body() body:createUserbody){\n        const {Email,Name,Password,travelId} = z.object({\n            Email:z.string().email(),\n            travelId:z.string().uuid(),\n            Password:z.string(),\n            Name:z.string().optional()\n        }).parse(body)\n        return this.userService.PostUser({\n        Email,Password,travelId,Name\n        })\n    }\n    @Get(\"/:Id\")\n    async GetUser(@Param(\"Id\") param:string){\n        const Id = z.string().parse(param)\n        const response = await this.userService.GetUser(Id)\n        return response\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRepositorie.html":{"url":"interfaces/UserRepositorie.html","title":"interface - UserRepositorie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRepositorie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositorie/UserRepositorie.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: Prisma.UserUncheckedCreateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositorie/UserRepositorie.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Prisma.UserUncheckedCreateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(UserId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositorie/UserRepositorie.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                UserId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Prisma, User } from \"@prisma/client\"\n\nexport interface UserRepositorie{\n    create(data:Prisma.UserUncheckedCreateInput):Promise\n    findById(UserId:string):Promise\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                GetUser\n                            \n                            \n                                    Async\n                                PostUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaServices)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaServices\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        GetUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetUser(Id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        PostUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    PostUser(data: Prisma.UserUncheckedCreateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Prisma.UserUncheckedCreateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma, PrismaClient, User } from '@prisma/client';\nimport { PrismaServices } from 'src/lib/prisma.service';\n\n@Injectable()\nexport class UserService {\n    constructor(private readonly prisma:PrismaServices){}\n    //serviço para criar um usuário\n    async PostUser(data:Prisma.UserUncheckedCreateInput):Promise{\n        const user = await this.prisma.user.create({\n          data\n        })\n        return user\n     }\n    async GetUser(Id:string):Promise{\n      const ps = await this.prisma.user.findUnique({\n          where:{\n            Id\n        }\n      })\n      return ps\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserServicesReturns.html":{"url":"interfaces/UserServicesReturns.html","title":"interface - UserServicesReturns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserServicesReturns\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dtos/interfaces/UserServicesReturns.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface UserServicesReturns{\n    \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/controllers/travel.controller.ts\n            \n            controller\n            TravelController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dtos/bodyTypes/createTravelBody.ts\n            \n            class\n            createTravelBody\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/dtos/bodyTypes/createUserBody.ts\n            \n            class\n            createUserbody\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dtos/interfaces/TravelServicesReturns.ts\n            \n            interface\n            PutUsersInTravelResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dtos/interfaces/UserServicesReturns.ts\n            \n            interface\n            UserServicesReturns\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/prisma.service.ts\n            \n            injectable\n            PrismaServices\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repositorie/PrismaRepositorie/PrismaUserRepositorie.ts\n            \n            class\n            PrismaUserRepositorie\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/repositorie/UserRepositorie.ts\n            \n            interface\n            UserRepositorie\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/travel.service.ts\n            \n            injectable\n            TravelService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createTravelBody.html":{"url":"classes/createTravelBody.html","title":"class - createTravelBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createTravelBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dtos/bodyTypes/createTravelBody.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                From\n                            \n                            \n                                Notes\n                            \n                            \n                                Title\n                            \n                            \n                                TravelDate\n                            \n                            \n                                Where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        From\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dtos/bodyTypes/createTravelBody.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/dtos/bodyTypes/createTravelBody.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/dtos/bodyTypes/createTravelBody.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TravelDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | string\n\n                    \n                \n                    \n                        \n                                Defined in src/dtos/bodyTypes/createTravelBody.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Where\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dtos/bodyTypes/createTravelBody.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class createTravelBody{\n    Title:string | null\n    Where:string\n    From:string\n    Notes:string | null\n    TravelDate:Date | string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createUserbody.html":{"url":"classes/createUserbody.html","title":"class - createUserbody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createUserbody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dtos/bodyTypes/createUserBody.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                Name\n                            \n                            \n                                Password\n                            \n                            \n                                travelId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dtos/bodyTypes/createUserBody.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/dtos/bodyTypes/createUserBody.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dtos/bodyTypes/createUserBody.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        travelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dtos/bodyTypes/createUserBody.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class createUserbody{\n    Email:string\n    travelId:string\n    Password:string\n    Name:string | null\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.25\n        \n            @faker-js/faker : ^9.0.1\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @prisma/client : ^5.19.1\n        \n            node-run-cmd : ^1.0.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            zod : ^3.23.8\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n    Travel Planer\n\n\nTravel Planner\nEsta é uma API simples que permite o gerenciamento de viagens entre grupos utilizando do framework RestJS \nFeatures\n\nvalidaçao de usuários \nCriaçao e organizaço de viagens\nlista de viagens\n\nRodando o projeto\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nPrismaServices\n\nPrismaServices\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPrismaServices->AppModule\n\n\n\n\n\nTravelService\n\nTravelService\n\nAppModule -->\n\nTravelService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
